{"version":3,"file":"renderer.js","names":["LEFT_EDGE","RIGHT_EDGE","TOP_EDGE","BOTTOM_EDGE","HORIZONTAL_OFFSET","MANDEL_RATIO","MIMETYPE_PNG","DEFAULT_SETTINGS","coloringMethod","loopPalette","filters","palette","r","g","b","Renderer","canvas","options","_options","Object","assign","_canvas","_context","getContext","_imageData","createImageData","width","height","_data","data","_coloringMethod","_sampler","julia","updateViewportSize","_scale","_dx","_dy","val","toDataURL","x","y","color","dataIndex","length","_imageRatio","ratio","product","_topEdge","_bottomEdge","_leftEdge","_rightEdge","xMax","xMin","yMax","yMin","xStep","yStep","realPositionToComplexPosition","i","sample","plot","scale","dx0","dy0","console","log","Date","updateRealBoundaries","sampleCoordinate","paint","putImageData","parseInt"],"sources":["../src/renderer.js"],"sourcesContent":["import coloringMethod from './coloring-method';\nimport {\n  julia\n} from './samplers/julia';\n\n//the bounds of the set\nconst LEFT_EDGE = -2.5;\nconst RIGHT_EDGE = 1;\nconst TOP_EDGE = -1;\nconst BOTTOM_EDGE = 1;\n\n//because the bounds of the set are uneven, we're horizontally offset this much\nconst HORIZONTAL_OFFSET = LEFT_EDGE - ((LEFT_EDGE - RIGHT_EDGE) / 2);\n\n//width / height ratio of the bounds of the set\nconst MANDEL_RATIO = (RIGHT_EDGE - LEFT_EDGE) / (BOTTOM_EDGE - TOP_EDGE);\n\nconst MIMETYPE_PNG = 'image/png';\n\n\nconst DEFAULT_SETTINGS = {\n  coloringMethod: 'default',\n  loopPalette: false,\n  filters: 'none',\n  palette: [{r:0, g:0, b:0}, {r:255, g:255, b:255}],\n};\n\nclass Renderer {\n  constructor(canvas, options) {\n\n    this._options = Object.assign({}, DEFAULT_SETTINGS, options);\n\n    this._canvas = canvas;\n    this._context = this._canvas.getContext('2d');\n    this._imageData = this._context.createImageData(this._canvas.width, this._canvas.height);\n    this._data = this._imageData.data;\n\n    this._coloringMethod = coloringMethod[this._options.coloringMethod];\n    this._sampler = julia;\n\n    this.updateViewportSize();\n\n    this._scale = 1;\n    this._dx = HORIZONTAL_OFFSET;\n    this._dy = 0;\n  }\n\n  get palette() {\n    return this._options.palette;\n  }\n\n  set palette(val){\n    this._options.palette= val;\n  }\n\n  get DataUrl() {\n    return this._canvas.toDataURL(MIMETYPE_PNG);\n  }\n\n  plot(x, y, color) {\n    //the canvas pixel data is a bit awkward to get at...\n    //see: https://www.w3.org/TR/2dcontext/#pixel-manipulation\n    var dataIndex = (y * this._imageData.width + x) * 4;\n    if (dataIndex < this._data.length && dataIndex >= 0) {\n      this._data[dataIndex] = color.r;\n      this._data[dataIndex + 1] = color.g;\n      this._data[dataIndex + 2] = color.b;\n      this._data[dataIndex + 3] = 255; //max saturation\n    }\n  }\n\n  updateViewportSize() {\n    //width / height ratio of the viewport\n    this._imageData = this._context.createImageData(this._canvas.width, this._canvas.height);\n    this._data = this._imageData.data;\n    this._imageRatio = this._imageData.width / this._imageData.height;\n\n    var ratio = 1;\n    var product = 0;\n\n    this._topEdge = TOP_EDGE;\n    this._bottomEdge = BOTTOM_EDGE;\n    this._leftEdge = LEFT_EDGE;\n    this._rightEdge = RIGHT_EDGE;\n\n    //modify the bounds we display based on the\n    //difference between the viewport ratio and\n    //the ratio of the bounds of the mandelbrot\n    if (this._imageRatio > MANDEL_RATIO) {\n      ratio = (this._imageRatio / MANDEL_RATIO);\n      product = (RIGHT_EDGE - LEFT_EDGE) * ratio;\n\n      this._leftEdge = -product * (2.5 / 3.5);\n      this._rightEdge = product * (1 / 3.5);\n    } else {\n      ratio = (MANDEL_RATIO / this._imageRatio);\n      product = (BOTTOM_EDGE - TOP_EDGE) * ratio;\n\n      this._topEdge = -product / 2.0;\n      this._bottomEdge = product / 2.0;\n    }\n  }\n\n  updateRealBoundaries() {\n    //the Real (ℝ) boundaries of the rendering given the zoom and offset\n    this.xMax = this._rightEdge / this._scale + this._dx;\n    this.xMin = this._leftEdge / this._scale + this._dx;\n    this.yMax = this._bottomEdge / this._scale + this._dy;\n    this.yMin = this._topEdge / this._scale + this._dy;\n\n    //translation of \"Pixel space\" to Real (ℝ) space\n    //i.e., these variables represent the Real difference\n    //between two pixels, horizonatally and vertically\n    this.xStep = (this.xMax - this.xMin) / this._imageData.width;\n    this.yStep = (this.yMax - this.yMin) / this._imageData.height;\n  }\n\n  sampleCoordinate(x, y){\n    //scale the pixel values to be within the bounds of the set\n    let {\n      r,\n      i\n    } = this.realPositionToComplexPosition(x, y);\n\n    //TODO: if the coloring method or palette has changed without the coordinates,\n    //zoom, or viewFrame changing, we can simply re-color the samples we already took\n    let sample = this._sampler(0,0,r,i);\n\n    return sample;\n  }\n\n  paint(x, y, sample){\n    let color = this._coloringMethod(sample, this._options);\n    this.plot(x, y, color);\n  }\n\n  //scale: how far we've zoomed in from the default\n  //dx0: displacement of perspective horizontally\n  //dy0: displacement of perspective vertically\n  async render(scale, dx0, dy0) {\n    console.log(`render start ${+new Date}`);\n    this._scale = scale;\n\n    this._dx = dx0 - (HORIZONTAL_OFFSET / this._scale);\n    this._dy = dy0;\n\n    this.updateRealBoundaries();\n\n    for (var y = 0; y < this._imageData.height; y++) {\n      for (var x = 0; x < this._imageData.width; x++) {\n        if(x+y%1000===0){\n          console.log(`pass ${x+y} ${+new Date}`);\n        }\n        let sample = this.sampleCoordinate(x,y);\n        this.paint(x, y, sample);\n      }\n    }\n\n\n    //TODO: the below is for applying filters to the image\n    // this._context.filter = 'blur(5px)';\n    // let tempCanvas = document.createElement('canvas');\n    // let tempContext = tempCanvas.getContext('2d');\n    // tempCanvas.width = this._canvas.width;\n    // tempCanvas.height = this._canvas.height;\n    // tempContext.putImageData(this._imageData, 0, 0);\n\n    // //draw it!\n    // this._context.drawImage(tempCanvas, 0, 0);\n\n    this._context.putImageData(this._imageData, 0, 0);\n    console.log('render end ', +new Date);\n  }\n\n  //r= the real part of the number\n  //i= the imaginary part of the number\n  complexPositionToRealPosition(r, i) {\n    return {\n      x: parseInt((r - this.xMin) / this.xStep),\n      y: parseInt((i - this.yMin) / this.yStep)\n    };\n  }\n\n  realPositionToComplexPosition(x, y) {\n    //scale the pixel values to frame the bounds of the set\n    return {\n      r: this.xMin + this.xStep * x,\n      i: this.yMin + this.yStep * y\n    };\n  }\n}\n\nexport default Renderer;\n"],"mappings":"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"}